#include <bits/stdc++.h>
using namespace std;


double r = 518.00, t = 223.15, p = 65000000;
double a = 0.427 * pow(r, 2) * pow(191, 2.5) / 4580000;
double b = 0.0866 * r * 191 / 4580000;

double f(double x)
{

    double t1 = (r * t) / (x - b), t2 = a / (x * (x + b) * sqrt(t));
    return p - t1 + t2;
}

int main()
{
    double n, x1, x2,x3;
    x1=0.001,x2=0.002;
   
    
   
       cout << "Iteraion     " << "v1     " << "v2     " <<"v3     "<< "f1(v1)     " << "f2(v2)     " << "error" << endl;
        int i=0;
    while (1)
    {
        double f1=f(x1),f2=f(x2);
        x3=x1-(f1*(x2-x1)/(f2-f1));
        cout<<i<<"  "<<x1<<"    "<<x2<<"    "<<x3<<"    "<<f1<<"    "<<f2<<"    "<<fabs((x3-x2)/x3)<<endl;
        if(fabs((x3-x2)/x3)<0.001)
        break;
        x1=x2;
        x2=x3;
        i++;
    }
    cout << "The vlaue of v: " << x3 << endl;
    cout << "Mass: " << 3 / x3 << endl;
   
}




// console print:

// Iteraion         v1              v2             v3              f1(v1)          f2(v2)         error
// 0           0.001           0.002           0.00140579      4.91861e+008    -7.20256e+008    0.422691
// 1           0.002           0.00140579      0.00164837      -7.20256e+008    4.96909e+008    0.147168
// 2           0.00140579      0.00164837      0.000889427     4.96909e+008    7.30358e+008    0.8533
// 3           0.00164837      0.000889427     -0.00107354     7.30358e+008    5.26714e+008    1.8285
// 4           0.000889427     -0.00107354     0.000155627     5.26714e+008    -8.82285e+008    7.89819
// 5           -0.00107354     0.000155627     -0.000779807    -8.82285e+008    2.80973e+009    1.19957
// 6           0.000155627     -0.000779807    -0.000555962    2.80973e+009    -8.83861e+008    0.402628
// 7           -0.000779807    -0.000555962    -0.0020275      -8.83861e+008    -1.04243e+009    0.72579
// 8           -0.000555962    -0.0020275      -0.00096031     -1.04243e+009    2.75128e+009    1.1113
// 9           -0.0020275      -0.00096031     -0.00121443     2.75128e+009    -8.59875e+008    0.209248
// 10          -0.00096031     -0.00121443     0.00129337      -8.59875e+008    -9.56832e+008    1.93896
// 11          -0.00121443     0.00129337      0.000465513     -9.56832e+008    4.71516e+008    1.77837
// 12          0.00129337      0.000465513     0.00215681      4.71516e+008    9.236e+008       0.784166
// 13          0.000465513     0.00215681      0.00180579      9.236e+008    -2.41888e+008      0.194383
// 14          0.00215681      0.00180579      0.00211845      -2.41888e+008    1.97169e+009    0.147588
// 15          0.00180579      0.00211845      0.00207695      1.97169e+009    -3.0175e+008     0.0199804
// 16          0.00211845      0.00207695      0.00225629      -3.0175e+008    -3.92597e+008    0.0794822
// 17          0.00207695      0.00225629      0.00236033      -3.92597e+008    -1.44148e+008    0.0440818
// 18          0.00225629      0.00236033      0.00251672      -1.44148e+008    -8.65576e+007    0.0621379
// 19          0.00236033      0.00251672      0.00263614      -8.65576e+007    -3.7479e+007    0.045302
// 20          0.00251672      0.00263614      0.00271545      -3.7479e+007    -1.49571e+007    0.0292071
// 21          0.00263614      0.00271545      0.00274486      -1.49571e+007    -4.04601e+006    0.0107144
// 22          0.00271545      0.00274486      0.00274994      -4.04601e+006    -595672          0.00184634
// 23          0.00274486      0.00274994      0.00275019      -595672           -28131.4        9.15093e-005
// The vlaue of v: 0.00275019
// Mass: 1090.83
